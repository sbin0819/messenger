[{"/Users/sbin/Desktop/project/clone/messenger/client/src/reportWebVitals.js":"1","/Users/sbin/Desktop/project/clone/messenger/client/src/ApolloClient.js":"2","/Users/sbin/Desktop/project/clone/messenger/client/src/index.js":"3","/Users/sbin/Desktop/project/clone/messenger/client/src/containers/ChatRoomContainer.jsx":"4","/Users/sbin/Desktop/project/clone/messenger/client/src/pages/ChatRoom.jsx":"5","/Users/sbin/Desktop/project/clone/messenger/client/src/containers/Input.jsx":"6","/Users/sbin/Desktop/project/clone/messenger/client/src/pages/Home.jsx":"7","/Users/sbin/Desktop/project/clone/messenger/client/src/layout/Layout.jsx":"8","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/index.jsx":"9","/Users/sbin/Desktop/project/clone/messenger/client/src/data/fakeData.js":"10","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Modal.jsx":"11","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Icon.jsx":"12","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Search.jsx":"13","/Users/sbin/Desktop/project/clone/messenger/client/src/common/ModalSearch.jsx":"14","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Tag.jsx":"15","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/ChatController/Top.jsx":"16","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/ChatController/index.jsx":"17","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/ChatViewer/index.jsx":"18","/Users/sbin/Desktop/project/clone/messenger/client/src/App.jsx":"19"},{"size":362,"mtime":1610531387182,"results":"20","hashOfConfig":"21"},{"size":883,"mtime":1610533272228,"results":"22","hashOfConfig":"21"},{"size":780,"mtime":1611052870455,"results":"23","hashOfConfig":"21"},{"size":1426,"mtime":1610531387180,"results":"24","hashOfConfig":"21"},{"size":184,"mtime":1611051766988,"results":"25","hashOfConfig":"21"},{"size":1108,"mtime":1610531387180,"results":"26","hashOfConfig":"21"},{"size":189,"mtime":1611052099268,"results":"27","hashOfConfig":"21"},{"size":1409,"mtime":1611227901219,"results":"28","hashOfConfig":"21"},{"size":632,"mtime":1611053807006,"results":"29","hashOfConfig":"21"},{"size":1328,"mtime":1611053659699,"results":"30","hashOfConfig":"21"},{"size":3051,"mtime":1611053272151,"results":"31","hashOfConfig":"21"},{"size":772,"mtime":1610538210804,"results":"32","hashOfConfig":"21"},{"size":1113,"mtime":1610781241820,"results":"33","hashOfConfig":"21"},{"size":5146,"mtime":1611053281713,"results":"34","hashOfConfig":"21"},{"size":676,"mtime":1610969835103,"results":"35","hashOfConfig":"21"},{"size":1723,"mtime":1611051191790,"results":"36","hashOfConfig":"21"},{"size":1273,"mtime":1611055030857,"results":"37","hashOfConfig":"21"},{"size":502,"mtime":1611054090888,"results":"38","hashOfConfig":"21"},{"size":350,"mtime":1611052867888,"results":"39","hashOfConfig":"21"},{"filePath":"40","messages":"41","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4da81",{"filePath":"42","messages":"43","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"44","messages":"45","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"46","messages":"47","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"48"},{"filePath":"49","messages":"50","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"53","messages":"54","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"55","messages":"56","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"57","messages":"58","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"59","messages":"60","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"61","messages":"62","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"63"},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"73","messages":"74","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"75","messages":"76","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"77","messages":"78","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"81"},"/Users/sbin/Desktop/project/clone/messenger/client/src/reportWebVitals.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/ApolloClient.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/index.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/containers/ChatRoomContainer.jsx",["82"],"import { gql, useQuery, useSubscription } from '@apollo/client';\n\nconst GET_CHATTING = gql`\n  query GetChatting {\n    chatting {\n      id\n      writer\n      description\n    }\n  }\n`;\n\n/* subscribeToMore에 document 정보를 주기 위해서 필요함 */\nconst NEW_CAHT = gql`\n  subscription NewChat {\n    newChat {\n      id\n      writer\n      description\n    }\n  }\n`;\n\nlet unsubscribe = null; //publish 했을때 변화\n\nconst ChatRoomContainer = () => {\n  const { loading, error, data, subscribeToMore } = useQuery(GET_CHATTING);\n  /** useSubscription을 굳이 쓸 필요가 없었다. */\n  // const { loading: subLoading, error: subError, data: newChat } = useSubscription(\n  //   NEW_CAHT,\n  // );\n\n  if (loading) return 'Loading...';\n  if (error) return `Error!`;\n  if (!unsubscribe) {\n    unsubscribe = subscribeToMore({\n      document: NEW_CAHT,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const { newChat } = subscriptionData.data;\n        return {\n          ...prev,\n          chatting: [...prev.chatting, newChat],\n        };\n      },\n    });\n    console.log('unsubscribe', unsubscribe);\n  }\n\n  return (\n    <div>\n      <h1>Apollo 채팅방에 오신걸 환영합니다.</h1>\n      {data.chatting.map((x) => (\n        <h3 key={x.id}>\n          {x.writer}: {x.description}\n        </h3>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatRoomContainer;\n","/Users/sbin/Desktop/project/clone/messenger/client/src/pages/ChatRoom.jsx",["83"],"/Users/sbin/Desktop/project/clone/messenger/client/src/containers/Input.jsx",["84"],"/Users/sbin/Desktop/project/clone/messenger/client/src/pages/Home.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/layout/Layout.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/index.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/data/fakeData.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/common/Modal.jsx",["85"],"import Search from './Search';\nimport Icon from './Icon';\nimport styled from 'styled-components';\nimport { CgClose, CgCheck } from 'react-icons/cg';\n\nconst StyledModal = styled.div`\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fefefe;\n  margin: 13% auto; /* 20% from the top and centered */\n  border: 1px solid #888;\n  width: 402px; /* Could be more or less, depending on screen size */\n  height: ${(props) => props?.height || '238px'};\n  /* height: 238px; */\n  border-radius: 14px;\n`;\n\nconst Header = styled.div`\n  flex: 0 0 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid #dbdbdb;\n  padding-left: 40px;\n  .title {\n    width: 320px;\n    font-size: 18px;\n    text-align: center;\n  }\n  .close {\n    width: 40px;\n    font-size: 20px;\n    cursor: pointer;\n  }\n`;\n\nconst Body = styled.div`\n  flex: 1;\n  /* display: flex; */\n  border-bottom: 1px solid #dbdbdb;\n  overflow: scroll;\n  .profile-list {\n    padding: 8px 8px 8px 12px;\n  }\n  .profile-list-inner {\n    display: flex;\n    align-items: center;\n    /* cursor: pointer; */\n  }\n  .profile-nickname {\n    margin-left: 20px;\n  }\n  .checked {\n    margin-left: 210px;\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    background: #0095f6;\n    color: white;\n    font-size: 30px;\n    font-weight: 800;\n  }\n`;\n\nconst Footer = styled.div`\n  flex: 0 0 50px;\n  font-size: 16px;\n  color: rgb(0, 149, 246);\n`;\n\nconst Modal = ({ data, setVisible }) => {\n  const close = () => {\n    setVisible(false);\n  };\n\n  return (\n    <StyledModal>\n      <ModalContent className=\"modal-content\">\n        <Header>\n          <div className=\"title\">\n            <span>계정 전환</span>\n          </div>\n          <div className=\"close\" onClick={close}>\n            <CgClose />\n          </div>\n        </Header>\n        <Body>\n          {/* data.others 에 따라서 늘어나야함 */}\n          {data.friends.map((other, index) => (\n            <div className=\"profile-list\" key={index}>\n              <div className=\"profile-list-inner\">\n                <Icon\n                  img={other.img}\n                  styles={{ width: '55px', height: '55px' }}\n                />\n                <span className=\"profile-nickname\">{other.nickname}</span>\n                {other.checked && (\n                  <span className=\"checked middle\">\n                    <CgCheck />\n                  </span>\n                )}\n              </div>\n            </div>\n          ))}\n        </Body>\n        <Footer className=\"middle\">\n          <div className=\"pointer\">기존계정으로 로그인</div>\n        </Footer>\n      </ModalContent>\n    </StyledModal>\n  );\n};\n\nexport default Modal;\n","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Icon.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/common/Search.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/common/ModalSearch.jsx",["86"],"import { useState, useEffect } from 'react';\nimport Icon from './Icon';\nimport Tag from './Tag';\nimport styled from 'styled-components';\nimport { CgClose, CgCheck } from 'react-icons/cg';\n\nconst StyledModal = styled.div`\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fefefe;\n  margin: 13% auto; /* 20% from the top and centered */\n  border: 1px solid #888;\n  width: 402px; /* Could be more or less, depending on screen size */\n  height: 450px;\n  border-radius: 14px;\n`;\n\nconst Header = styled.div`\n  flex: 0 0 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid #dbdbdb;\n  text-align: center;\n  .close {\n    width: 60px;\n    font-size: 20px;\n    cursor: pointer;\n  }\n  .title {\n    width: 280px;\n    font-size: 18px;\n  }\n  .next {\n    width: 60px;\n    color: #c3e6fd;\n  }\n  .next-active {\n    width: 60px;\n    color: #21a2f8;\n  }\n`;\n\nconst Body = styled.div`\n  flex: 1;\n  /* display: flex; */\n  border-bottom: 1px solid #dbdbdb;\n  overflow: scroll;\n  .profile-list {\n    padding: 8px 8px 8px 12px;\n  }\n  .profile-list-inner {\n    display: flex;\n    align-items: center;\n    :hover {\n      background: #f9faf9;\n    }\n  }\n  .profile-nickname {\n    margin-left: 20px;\n    width: 270px;\n  }\n  .clicked {\n    width: 50px;\n    background: pink;\n  }\n  .circle {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    border: 1px solid #dbdbdb;\n    color: #fff;\n    font-size: 30px;\n    font-weight: 800;\n  }\n  .checked {\n    background: #0095f6;\n  }\n`;\n\nconst StyledSearch = styled.div`\n  min-height: 55px;\n  border-bottom: 1px solid #dbdbdb;\n  display: flex;\n  align-items: center;\n  label {\n    flex: 0 0 100px;\n    padding: 0 10px;\n  }\n  input {\n    border: 0;\n    outline: 0;\n    height: 30px;\n    font-size: 18px;\n  }\n\n  .tag-list {\n    display: flex;\n    flex-wrap: wrap;\n  }\n`;\n\n// 채팅 방이 있는 경우 redirect\n// 채팅 방이 없는 경우 생성 redirect\n// 여러명 채팅 방 초대 가능 select 만들기\n\nconst Modal = ({ data, setVisible }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [clickedList, setClickedList] = useState([]);\n\n  const searchResults = !searchTerm\n    ? data.friends\n    : data.friends.filter((person) =>\n        person.nickname.toLowerCase().includes(searchTerm),\n      );\n\n  const onCheckFriend = (data) => {\n    data.checked ? (data.checked = false) : (data.checked = true);\n    const clickedResults = searchResults.filter(\n      (list) => list.checked === true,\n    );\n    setClickedList(clickedResults);\n  };\n\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const close = () => {\n    setVisible(false);\n  };\n\n  const makeChatRoom = (data) => {\n    console.log(data);\n  };\n\n  return (\n    <StyledModal>\n      <ModalContent className=\"modal-content\">\n        <Header>\n          <div className=\"close\" onClick={close}>\n            <CgClose />\n          </div>\n          <div className=\"title\">\n            <span>새로운 메시지</span>\n          </div>\n          {clickedList ? (\n            <div\n              className=\"next-active pointer\"\n              onClick={() => makeChatRoom(clickedList)}\n            >\n              다음\n            </div>\n          ) : (\n            <div className=\"next\">다음</div>\n          )}\n        </Header>\n        <StyledSearch>\n          <label>받는 사람:</label>\n          <div>\n            <div className=\"tag-list\">\n              {clickedList.map((list, index) => (\n                <Tag\n                  tag={list.nickname}\n                  setState={setClickedList}\n                  key={index}\n                />\n              ))}\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"검색...\"\n                value={searchTerm}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n        </StyledSearch>\n        <Body>\n          {searchResults.map((list, index) => (\n            <div\n              className=\"profile-list\"\n              key={index}\n              onClick={() => onCheckFriend(list)}\n            >\n              <div className=\"profile-list-inner pointer\">\n                <Icon\n                  img={list.img}\n                  styles={{ width: '55px', height: '55px' }}\n                />\n                <div className=\"profile-nickname\">{list.nickname}</div>\n                {list.checked ? (\n                  <div className=\"circle middle checked\">\n                    <CgCheck />\n                  </div>\n                ) : (\n                  <div className=\"circle middle\" />\n                )}\n              </div>\n            </div>\n          ))}\n        </Body>\n      </ModalContent>\n    </StyledModal>\n  );\n};\n\nexport default Modal;\n","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Tag.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/ChatController/Top.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/ChatController/index.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/ChatViewer/index.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/App.jsx",[],["87","88"],{"ruleId":"89","severity":1,"message":"90","line":1,"column":25,"nodeType":"91","messageId":"92","endLine":1,"endColumn":40},{"ruleId":"93","severity":1,"message":"94","line":4,"column":1,"nodeType":"95","endLine":9,"endColumn":3},{"ruleId":"89","severity":1,"message":"96","line":16,"column":19,"nodeType":"91","messageId":"92","endLine":16,"endColumn":23},{"ruleId":"89","severity":1,"message":"97","line":1,"column":8,"nodeType":"91","messageId":"92","endLine":1,"endColumn":14},{"ruleId":"89","severity":1,"message":"98","line":1,"column":20,"nodeType":"91","messageId":"92","endLine":1,"endColumn":29},{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},"no-unused-vars","'useSubscription' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","'Search' is defined but never used.","'useEffect' is defined but never used.","no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-global-assign","no-unsafe-negation"]