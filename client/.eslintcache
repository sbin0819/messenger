[{"/Users/sbin/Desktop/project/clone/messenger/client/src/reportWebVitals.js":"1","/Users/sbin/Desktop/project/clone/messenger/client/src/ApolloClient.js":"2","/Users/sbin/Desktop/project/clone/messenger/client/src/App.js":"3","/Users/sbin/Desktop/project/clone/messenger/client/src/index.js":"4","/Users/sbin/Desktop/project/clone/messenger/client/src/containers/ChatRoomContainer.jsx":"5","/Users/sbin/Desktop/project/clone/messenger/client/src/pages/ChatRoom.jsx":"6","/Users/sbin/Desktop/project/clone/messenger/client/src/containers/Input.jsx":"7","/Users/sbin/Desktop/project/clone/messenger/client/src/pages/Home.jsx":"8","/Users/sbin/Desktop/project/clone/messenger/client/src/layout/Layout.jsx":"9","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/index.jsx":"10","/Users/sbin/Desktop/project/clone/messenger/client/src/data/fakeData.js":"11","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/Left/index.jsx":"12","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Modal.jsx":"13","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/Left/Top.jsx":"14","/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/Right/index.jsx":"15","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Icon.jsx":"16","/Users/sbin/Desktop/project/clone/messenger/client/src/common/Search.jsx":"17","/Users/sbin/Desktop/project/clone/messenger/client/src/common/ModalSearch.jsx":"18"},{"size":362,"mtime":1610531387182,"results":"19","hashOfConfig":"20"},{"size":883,"mtime":1610533272228,"results":"21","hashOfConfig":"20"},{"size":342,"mtime":1610533272228,"results":"22","hashOfConfig":"20"},{"size":780,"mtime":1610531387180,"results":"23","hashOfConfig":"20"},{"size":1426,"mtime":1610531387180,"results":"24","hashOfConfig":"20"},{"size":184,"mtime":1610339399085,"results":"25","hashOfConfig":"26"},{"size":1108,"mtime":1610339375629,"results":"27","hashOfConfig":"26"},{"size":74,"mtime":1610363314480,"results":"28","hashOfConfig":"26"},{"size":1027,"mtime":1610531387181,"results":"29","hashOfConfig":"20"},{"size":464,"mtime":1610451945700,"results":"30","hashOfConfig":"26"},{"size":1240,"mtime":1610786534548,"results":"31","hashOfConfig":"20"},{"size":886,"mtime":1610625022360,"results":"32","hashOfConfig":"20"},{"size":3050,"mtime":1610784124674,"results":"33","hashOfConfig":"20"},{"size":1722,"mtime":1610781184648,"results":"34","hashOfConfig":"20"},{"size":394,"mtime":1610531387179,"results":"35","hashOfConfig":"20"},{"size":772,"mtime":1610538210804,"results":"36","hashOfConfig":"20"},{"size":1113,"mtime":1610781241820,"results":"37","hashOfConfig":"20"},{"size":4558,"mtime":1610788749580,"results":"38","hashOfConfig":"20"},{"filePath":"39","messages":"40","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"4da81",{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"43","messages":"44","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"45","messages":"46","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"50"},{"filePath":"51","messages":"52","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"53"},"16iehaf",{"filePath":"54","messages":"55","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"56"},{"filePath":"57","messages":"58","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"59"},{"filePath":"60","messages":"61","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"66","messages":"67","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"70","messages":"71","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"72","messages":"73","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"76","messages":"77","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"78","messages":"79","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"80"},"/Users/sbin/Desktop/project/clone/messenger/client/src/reportWebVitals.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/ApolloClient.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/App.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/index.js",[],["81","82"],"/Users/sbin/Desktop/project/clone/messenger/client/src/containers/ChatRoomContainer.jsx",["83"],"import { gql, useQuery, useSubscription } from '@apollo/client';\n\nconst GET_CHATTING = gql`\n  query GetChatting {\n    chatting {\n      id\n      writer\n      description\n    }\n  }\n`;\n\n/* subscribeToMore에 document 정보를 주기 위해서 필요함 */\nconst NEW_CAHT = gql`\n  subscription NewChat {\n    newChat {\n      id\n      writer\n      description\n    }\n  }\n`;\n\nlet unsubscribe = null; //publish 했을때 변화\n\nconst ChatRoomContainer = () => {\n  const { loading, error, data, subscribeToMore } = useQuery(GET_CHATTING);\n  /** useSubscription을 굳이 쓸 필요가 없었다. */\n  // const { loading: subLoading, error: subError, data: newChat } = useSubscription(\n  //   NEW_CAHT,\n  // );\n\n  if (loading) return 'Loading...';\n  if (error) return `Error!`;\n  if (!unsubscribe) {\n    unsubscribe = subscribeToMore({\n      document: NEW_CAHT,\n      updateQuery: (prev, { subscriptionData }) => {\n        if (!subscriptionData.data) return prev;\n        const { newChat } = subscriptionData.data;\n        return {\n          ...prev,\n          chatting: [...prev.chatting, newChat],\n        };\n      },\n    });\n    console.log('unsubscribe', unsubscribe);\n  }\n\n  return (\n    <div>\n      <h1>Apollo 채팅방에 오신걸 환영합니다.</h1>\n      {data.chatting.map((x) => (\n        <h3 key={x.id}>\n          {x.writer}: {x.description}\n        </h3>\n      ))}\n    </div>\n  );\n};\n\nexport default ChatRoomContainer;\n","/Users/sbin/Desktop/project/clone/messenger/client/src/pages/ChatRoom.jsx",["84"],"import ChatRoomContainer from '../containers/ChatRoomContainer';\nimport Input from '../containers/Input';\n\nexport default () => (\n  <>\n    <ChatRoomContainer />\n    <Input />\n  </>\n);\n","/Users/sbin/Desktop/project/clone/messenger/client/src/containers/Input.jsx",["85"],"import { useState, useEffect } from 'react';\nimport { gql, useMutation } from '@apollo/client';\nconst WRITE = gql`\n  mutation Write($writer: String!, $description: String!) {\n    write(writer: $writer, description: $description)\n  }\n`;\n\nconst Input = () => {\n  const [writer, setWriter] = useState('');\n  useEffect(() => {\n    const writer = prompt('Name');\n    setWriter(writer);\n  }, []);\n  const [description, setDescription] = useState('');\n  const [write, { data }] = useMutation(WRITE);\n  return (\n    <div>\n      <input\n        type='text'\n        value={description}\n        placeholder='내용을 입력하세요'\n        onChange={(e) => {\n          setDescription(e.target.value);\n        }}\n        onKeyPress={(e) => {\n          if (e.key === 'Enter') {\n            write({ variables: { writer, description } });\n            setDescription('');\n          }\n        }}\n      />\n      <button\n        onClick={() => {\n          write({ variables: { writer, description } });\n          setDescription('');\n        }}\n      >\n        확인\n      </button>\n    </div>\n  );\n};\n\nexport default Input;\n","/Users/sbin/Desktop/project/clone/messenger/client/src/pages/Home.jsx",["86"],"import Home from '../components/ChatRoom';\nexport default () => <Home />;\n","/Users/sbin/Desktop/project/clone/messenger/client/src/layout/Layout.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/index.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/data/fakeData.js",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/Left/index.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/common/Modal.jsx",["87"],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/Left/Top.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/components/ChatRoom/Right/index.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/common/Icon.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/common/Search.jsx",[],"/Users/sbin/Desktop/project/clone/messenger/client/src/common/ModalSearch.jsx",["88"],"import { useState, useEffect } from 'react';\nimport Icon from './Icon';\nimport styled from 'styled-components';\nimport { CgClose, CgCheck } from 'react-icons/cg';\n\nconst StyledModal = styled.div`\n  position: fixed; /* Stay in place */\n  z-index: 1; /* Sit on top */\n  left: 0;\n  top: 0;\n  width: 100%; /* Full width */\n  height: 100%; /* Full height */\n  overflow: auto; /* Enable scroll if needed */\n  background-color: rgb(0, 0, 0); /* Fallback color */\n  background-color: rgba(0, 0, 0, 0.4); /* Black w/ opacity */\n`;\n\nconst ModalContent = styled.div`\n  display: flex;\n  flex-direction: column;\n  background-color: #fefefe;\n  margin: 13% auto; /* 20% from the top and centered */\n  border: 1px solid #888;\n  width: 402px; /* Could be more or less, depending on screen size */\n  height: 450px;\n  border-radius: 14px;\n`;\n\nconst Header = styled.div`\n  flex: 0 0 42px;\n  display: flex;\n  justify-content: center;\n  align-items: center;\n  border-bottom: 1px solid #dbdbdb;\n  padding-left: 40px;\n  .title {\n    width: 320px;\n    font-size: 18px;\n    text-align: center;\n  }\n  .close {\n    width: 40px;\n    font-size: 20px;\n    cursor: pointer;\n  }\n`;\n\nconst Body = styled.div`\n  flex: 1;\n  /* display: flex; */\n  border-bottom: 1px solid #dbdbdb;\n  overflow: scroll;\n  .profile-list {\n    padding: 8px 8px 8px 12px;\n  }\n  .profile-list-inner {\n    display: flex;\n    align-items: center;\n    :hover {\n      background: #f9faf9;\n    }\n  }\n  .profile-nickname {\n    margin-left: 20px;\n    width: 270px;\n  }\n  .clicked {\n    width: 50px;\n    background: pink;\n  }\n  .circle {\n    width: 25px;\n    height: 25px;\n    border-radius: 50%;\n    border: 1px solid #dbdbdb;\n    color: #fff;\n    font-size: 30px;\n    font-weight: 800;\n  }\n  .checked {\n    background: #0095f6;\n  }\n`;\n\nconst StyledSearch = styled.div`\n  min-height: 55px;\n  border-bottom: 1px solid #dbdbdb;\n  display: flex;\n  align-items: center;\n  label {\n    padding: 0 10px;\n  }\n  input {\n    border: 0;\n    outline: 0;\n    height: 30px;\n    font-size: 18px;\n  }\n`;\n\n// 채팅 방이 있는 경우 redirect\n// 채팅 방이 없는 경우 생성 redirect\n// 여러명 채팅 방 초대 가능 select 만들기\n\nconst Modal = ({ data, setVisible }) => {\n  const [searchTerm, setSearchTerm] = useState('');\n  const [clickedList, setClickedList] = useState([]);\n\n  const searchResults = !searchTerm\n    ? data.others\n    : data.others.filter((person) =>\n        person.nickname.toLowerCase().includes(searchTerm)\n      );\n\n  const onClick = (data) => {\n    data.checked ? (data.checked = false) : (data.checked = true);\n    const clickedResults = searchResults.filter(\n      (list) => list.checked === true\n    );\n    setClickedList(clickedResults);\n  };\n\n  const handleChange = (e) => {\n    setSearchTerm(e.target.value);\n  };\n  const close = () => {\n    setVisible(false);\n  };\n\n  return (\n    <StyledModal>\n      <ModalContent className=\"modal-content\">\n        <Header>\n          <div className=\"title\">\n            <span>계정 전환</span>\n          </div>\n          <div className=\"close\" onClick={close}>\n            <CgClose />\n          </div>\n        </Header>\n        <StyledSearch>\n          <label>받는 사람:</label>\n          <div>\n            <div className=\"clicked-friends\">\n              {clickedList.map((list, index) => (\n                <span className=\"tag\" key={index}>\n                  {list.nickname}\n                </span>\n              ))}\n            </div>\n            <div>\n              <input\n                type=\"text\"\n                placeholder=\"검색...\"\n                value={searchTerm}\n                onChange={handleChange}\n              />\n            </div>\n          </div>\n        </StyledSearch>\n        <Body>\n          {searchResults.map((list, index) => (\n            <div\n              className=\"profile-list\"\n              key={index}\n              onClick={() => onClick(list)}\n            >\n              <div className=\"profile-list-inner pointer\">\n                <Icon\n                  img={list.img}\n                  styles={{ width: '55px', height: '55px' }}\n                />\n                <div className=\"profile-nickname\">{list.nickname}</div>\n                {list.checked ? (\n                  <div className=\"circle middle checked\">\n                    <CgCheck />\n                  </div>\n                ) : (\n                  <div className=\"circle middle\" />\n                )}\n              </div>\n            </div>\n          ))}\n        </Body>\n      </ModalContent>\n    </StyledModal>\n  );\n};\n\nexport default Modal;\n",{"ruleId":"89","replacedBy":"90"},{"ruleId":"91","replacedBy":"92"},{"ruleId":"93","severity":1,"message":"94","line":1,"column":25,"nodeType":"95","messageId":"96","endLine":1,"endColumn":40},{"ruleId":"97","severity":1,"message":"98","line":4,"column":1,"nodeType":"99","endLine":9,"endColumn":3},{"ruleId":"93","severity":1,"message":"100","line":16,"column":19,"nodeType":"95","messageId":"96","endLine":16,"endColumn":23},{"ruleId":"97","severity":1,"message":"98","line":2,"column":1,"nodeType":"99","endLine":2,"endColumn":31},{"ruleId":"93","severity":1,"message":"101","line":1,"column":8,"nodeType":"95","messageId":"96","endLine":1,"endColumn":14},{"ruleId":"93","severity":1,"message":"102","line":1,"column":20,"nodeType":"95","messageId":"96","endLine":1,"endColumn":29},"no-native-reassign",["103"],"no-negated-in-lhs",["104"],"no-unused-vars","'useSubscription' is defined but never used.","Identifier","unusedVar","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","'data' is assigned a value but never used.","'Search' is defined but never used.","'useEffect' is defined but never used.","no-global-assign","no-unsafe-negation"]